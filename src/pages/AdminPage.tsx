import { useAuth } from '../shared/useAuthSimple'
import { OrgSelector } from '../components'
import { Button, Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui'
import { useNavigate } from 'react-router-dom'

export default function AdminPage() {
  const navigate = useNavigate()
  const { 
    user, 
    isLoading, 
    isAuthenticated, 
    currentOrg, 
    currentRole, 
    signOut, 
    switchOrganization,
    hasPermission 
  } = useAuth()

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-jeopardy-blue mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    )
  }

  if (!isAuthenticated || !user) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <Card className="w-full max-w-md">
          <CardHeader>
            <CardTitle>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω</CardTitle>
            <CardDescription>
              –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∫–µ
            </CardDescription>
          </CardHeader>
          <CardContent>
            <Button onClick={() => window.location.href = '/login'}>
              –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
            </Button>
          </CardContent>
        </Card>
      </div>
    )
  }

  const handleCreateOrg = () => {
    // TODO: Implement organization creation
    alert('–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö')
  }

  const handleSignOut = async () => {
    try {
      await signOut()
      window.location.href = '/login'
    } catch (error) {
      console.error('Error signing out:', error)
    }
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center space-x-4">
              <h1 className="text-xl font-semibold text-gray-900">Jeopardy Admin</h1>
              {currentOrg && (
                <OrgSelector
                  organizations={user.organizations}
                  currentOrg={currentOrg}
                  onSelectOrg={switchOrganization}
                  onCreateOrg={handleCreateOrg}
                />
              )}
            </div>
            
            <div className="flex items-center space-x-4">
              <div className="text-sm text-gray-600">
                {user.name || user.email}
                {currentRole && (
                  <span className="ml-2 px-2 py-1 bg-jeopardy-blue text-white text-xs rounded-full">
                    {currentRole === 'Owner' ? '–í–ª–∞–¥–µ–ª–µ—Ü' :
                     currentRole === 'Admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' :
                     currentRole === 'Host' ? '–í–µ–¥—É—â–∏–π' : '–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å'}
                  </span>
                )}
              </div>
              <Button variant="secondary" onClick={handleSignOut}>
                –í—ã–π—Ç–∏
              </Button>
            </div>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="space-y-6">
          {/* Welcome Card */}
          <Card>
            <CardHeader>
              <CardTitle>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω–∫—É!</CardTitle>
              <CardDescription>
                –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –∏–≥—Ä–∞–º–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="text-center p-4 bg-blue-50 rounded-lg">
                  <div className="text-2xl font-bold text-blue-600">0</div>
                  <div className="text-sm text-gray-600">–ò–≥—Ä —Å–æ–∑–¥–∞–Ω–æ</div>
                </div>
                <div className="text-center p-4 bg-green-50 rounded-lg">
                  <div className="text-2xl font-bold text-green-600">0</div>
                  <div className="text-sm text-gray-600">–ü–∞–∫–µ—Ç–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤</div>
                </div>
                <div className="text-center p-4 bg-purple-50 rounded-lg">
                  <div className="text-2xl font-bold text-purple-600">1</div>
                  <div className="text-sm text-gray-600">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* User Management - –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ */}
          {/* {hasPermission('canManageUsers') && currentOrg && (
            <UserManagement
              orgId={currentOrg.id}
              currentUserRole={currentRole || ''}
            />
          )} */}

          {/* Quick Actions */}
          <Card>
            <CardHeader>
              <CardTitle>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
              <CardDescription>
                –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–∫–∏
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                {hasPermission('canManageGames') && currentOrg && (
                  <Button 
                    variant="primary" 
                    className="h-20 flex flex-col items-center justify-center"
                    onClick={() => navigate(`/org/${currentOrg.id}/admin/games`)}
                  >
                    <div className="text-2xl mb-1">üéÆ</div>
                    <div className="text-sm">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–∞–º–∏</div>
                  </Button>
                )}
                
                {hasPermission('canManagePacks') && (
                  <Button variant="secondary" className="h-20 flex flex-col items-center justify-center">
                    <div className="text-2xl mb-1">üìö</div>
                    <div className="text-sm">–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø–∞–∫–µ—Ç–æ–≤</div>
                  </Button>
                )}
                
                {hasPermission('canHostGames') && (
                  <Button variant="secondary" className="h-20 flex flex-col items-center justify-center">
                    <div className="text-2xl mb-1">üéØ</div>
                    <div className="text-sm">–ü—Ä–æ–≤–µ—Å—Ç–∏ –∏–≥—Ä—É</div>
                  </Button>
                )}
                
                {hasPermission('canViewAnalytics') && (
                  <Button variant="secondary" className="h-20 flex flex-col items-center justify-center">
                    <div className="text-2xl mb-1">üìä</div>
                    <div className="text-sm">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</div>
                  </Button>
                )}
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  )
}
